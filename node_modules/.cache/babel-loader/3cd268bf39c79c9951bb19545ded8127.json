{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/justin/Desktop/react-wordpress-headless/src/Components/Pages/Page.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\n\nfunction find(arr, key, val) {\n  // Find array element which has a key value of val \n  for (var ai, i = arr.length; i--;) if ((ai = arr[i]) && ai[key] == val) return ai;\n\n  return null;\n}\n\n;\n\nfunction FetchContent({\n  pageId\n}) {\n  _s();\n\n  const [pages, setPages] = useState([]);\n  useEffect(() => {\n    fetch(\"pages.json\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(json => {\n      setPages(find(json, 'id', '{pageId}'));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pages.map(page => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: page.title.rendered\n    }, page.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this))\n  }, void 0, false);\n}\n\n_s(FetchContent, \"OZdSfBS7sFhYlewtmEOlG7gcNNI=\");\n\n_c = FetchContent;\n\nfunction Page() {\n  _s2();\n\n  const {\n    state: {\n      pageId\n    }\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(FetchContent, {\n      pageId: pageId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Page, \"6btz0t95BJLErkxOvvFhiJOx0c8=\", false, function () {\n  return [useLocation];\n});\n\n_c2 = Page;\nexport default Page;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FetchContent\");\n$RefreshReg$(_c2, \"Page\");","map":{"version":3,"sources":["/Users/justin/Desktop/react-wordpress-headless/src/Components/Pages/Page.js"],"names":["React","useState","useEffect","useLocation","find","arr","key","val","ai","i","length","FetchContent","pageId","pages","setPages","fetch","headers","then","res","json","map","page","title","rendered","id","Page","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,WADF,QAEO,kBAFP;;AAIA,SAASC,IAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAAE;AAC9B,OAAK,IAAIC,EAAJ,EAAQC,CAAC,GAAGJ,GAAG,CAACK,MAArB,EAA6BD,CAAC,EAA9B,GACE,IAAI,CAACD,EAAE,GAAGH,GAAG,CAACI,CAAD,CAAT,KAAiBD,EAAE,CAACF,GAAD,CAAF,IAAWC,GAAhC,EACE,OAAOC,EAAP;;AACJ,SAAO,IAAP;AACD;;AAAA;;AAED,SAASG,YAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AAAA;;AAEpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACVa,IAAAA,KAAK,CAAC,YAAD,EAAe;AACtBC,MAAAA,OAAO,EAAG;AACR,wBAAgB,kBADR;AAER,kBAAU;AAFF;AADY,KAAf,CAAL,CAMCC,IAND,CAMMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANb,EAQLF,IARK,CAQAE,IAAI,IAAG;AACFL,MAAAA,QAAQ,CAACV,IAAI,CAAEe,IAAF,EAAQ,IAAR,EAAc,UAAd,CAAL,CAAR;AAAwC,KAT7C;AAWE,GAZC,CAAT;AAgBD,sBAGC;AAAA,cAECN,KAAK,CAACO,GAAN,CAAUC,IAAI,iBAEb;AAAA,gBAAmBA,IAAI,CAACC,KAAL,CAAWC;AAA9B,OAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,YAFD;AAFD,mBAHD;AAiBA;;GArCQb,Y;;KAAAA,Y;;AAwCT,SAASc,IAAT,GAAgB;AAAA;;AACd,QAAM;AAAEC,IAAAA,KAAK,EAAG;AAAEd,MAAAA;AAAF;AAAV,MAA0BT,WAAW,EAA3C;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BAED,QAAC,YAAD;AAAe,MAAA,MAAM,EAAES;AAAvB;AAAA;AAAA;AAAA;AAAA;AAFC;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IAXQa,I;UACyBtB,W;;;MADzBsB,I;AAaT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  useLocation\n} from \"react-router-dom\";\n\nfunction find (arr, key, val) { // Find array element which has a key value of val \n  for (var ai, i = arr.length; i--;)\n    if ((ai = arr[i]) && ai[key] == val)\n      return ai;\n  return null;\n};\n\nfunction FetchContent( { pageId } ) {\n\t\nconst [pages, setPages] = useState([]); \n  \n\t useEffect(() => {\n        fetch(\"pages.json\" ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    })\n        .then(res => res.json())\n        \n\t\t.then(json =>{\n             setPages(find (json, 'id', '{pageId}'))}\n              )\n         });\n\t\n\t\n\t\n\treturn (\n\t\t\n\t\t\n\t\t<>\n\t\n\t\t{pages.map(page => ( \n\n\t\t\t\t<h1 key={page.id}>{page.title.rendered}</h1>\n\t\t\t\n        ))}\n\n\t\t</>\n\t\t\n\t\t\n\t);\n\t\n\t\n}\n\n\nfunction Page() {\n  const { state:  { pageId }  } = useLocation();\n\t\n\n  return (\n    <div className=\"container-fluid\">\n\t  \n\t  <FetchContent  pageId={pageId} />\n\t  \n\t </div>\n  );\n}\n \nexport default Page;\n"]},"metadata":{},"sourceType":"module"}