{"version":3,"sources":["../src/index.js"],"names":["_configure","registerComponent","getMountedComponent","mountAll","components","mountedComponents","config","camelCase","unmountRemovedComponents","defaultProps","newConfig","_","extend","name","component","mount","props","rootNode","element","React","createElement","parseProps","ReactDOM","render","mapValues","value","key","object","isObject","isEqual","keys","$component","window","$window","getRootNode","scriptNode","document","getElementById","id","dataset","rootType","rootClass","className","parentNode","insertBefore","inDocument","node","contains","unmountComponent","root","findDOMNode","unmountComponentAtNode","isRemoved","previouslyMountedComponents","componentId","hasOwnProperty","scripts","querySelectorAll","i","length","script","console","error","JSON","parse","innerHTML","trim","__component"],"mappings":"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","file":"index.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport React from 'react';\nimport _ from 'lodash';\nimport {toCamelCase} from 'case-converter';\n\nconst components = {},\n  mountedComponents = {},\n  config = {\n    camelCase: true,\n    unmountRemovedComponents: true,\n    defaultProps: {}\n  };\n\nexport function _configure(newConfig) {\n  _.extend(config, newConfig);\n}\n\nexport function registerComponent(name, component) {\n  if (typeof component === 'undefined' && typeof name === 'function') {\n    component = name;\n    name = component.name;\n  }\n\n  components[name] = component;\n}\n\nfunction mount(component, props, rootNode, config) {\n  const element = React.createElement(\n    component,\n    parseProps(_.extend({}, props, config.defaultProps), {camelCase: config.camelCase}),\n    null\n  );\n  return ReactDOM.render(\n    element, rootNode\n  );\n}\n\nfunction parseProps(props, {camelCase = true}) {\n  props = _.mapValues(props, (value, key, object) => {\n    if (_.isObject(value) && _.isEqual(_.keys(value), ['$component']))\n      return () => mountedComponents[value.$component];\n    if (_.isObject(value) && _.isEqual(_.keys(value), ['$window']))\n      return window[value.$window];\n    return value;\n  });\n  if (camelCase) props = toCamelCase(props);\n  return props;\n}\n\nfunction getRootNode(scriptNode) {\n  let rootNode = document.getElementById(scriptNode.id + '-root');\n  if (rootNode) return rootNode;\n  rootNode = document.createElement(scriptNode.dataset.rootType || 'div');\n  rootNode.id = scriptNode.id + '-root';\n  if (scriptNode.dataset.rootClass)\n    rootNode.className = scriptNode.dataset.rootClass;\n  scriptNode.parentNode.insertBefore(rootNode, scriptNode);\n  return rootNode;\n}\n\nexport function getMountedComponent(component) {\n  return mountedComponents[component];\n}\n\nfunction inDocument(node) {\n  return document.contains(node);\n}\n\nfunction unmountComponent(component) {\n  const root = ReactDOM.findDOMNode(component);\n  if (root)\n    ReactDOM.unmountComponentAtNode(root.parentNode);\n}\n\nfunction isRemoved(component) {\n  const root = ReactDOM.findDOMNode(component);\n  if (!root)\n    return true;\n  return !inDocument(root.parentNode);\n}\n\nfunction unmountRemovedComponents() {\n  const previouslyMountedComponents = _.extend({}, mountedComponents);\n  for (const componentId in previouslyMountedComponents) {\n    if (!previouslyMountedComponents.hasOwnProperty(componentId)) continue;\n    if (isRemoved(previouslyMountedComponents[componentId])) {\n      unmountComponent(previouslyMountedComponents[componentId]);\n      delete previouslyMountedComponents[componentId];\n    }\n  }\n}\n\nexport function mountAll() {\n  // Set defaults\n  if (config.unmountRemovedComponents) unmountRemovedComponents();\n\n  // Get all scripts\n  const scripts = document.querySelectorAll('script[data-component]');\n  for (let i = 0; i < scripts.length; i++) {\n    const script = scripts[i];\n    // Ensure script has an id\n    if (typeof script.id === 'undefined') {\n      console.error('Auntomount scripts need to have an id');\n      continue;\n    }\n\n    // Ensure component is not already mounted\n    if (typeof mountedComponents[script.id] !== 'undefined') continue;\n\n    // Ensure component is registered\n    if (typeof components[script.dataset.component] === 'undefined') {\n      console.error(script.dataset.component, 'is not registered with automount');\n      continue;\n    }\n\n    // Create root for element\n    const root = getRootNode(script);\n\n    let props;\n    try {\n      props = JSON.parse(script.innerHTML.trim());\n    } catch (error) {\n      props = {};\n    }\n\n    // Mount component\n    mountedComponents[script.id] = mount(\n      components[script.dataset.component],\n      props,\n      root,\n      config\n    );\n\n    // Link to original script for external usage\n    script.__component = mountedComponents[script.id];\n  }\n}\n"]}